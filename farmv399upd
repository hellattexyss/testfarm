-- Auto-execute across teleports (always TRUE)
queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/hellattexyss/testfarm/refs/heads/main/farmv399upd"))()')

-- Auto party / teleport add spam (as-is)
if game.PlaceId == 79546208627805 then
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents", 9e9)
    local TeleportEvent = RemoteEvents:WaitForChild("TeleportEvent", 9e9)
    local function TeleportAdd(num)
        local args = { [1] = "Add", [2] = num }
        TeleportEvent:FireServer(unpack(args))
        task.wait(0.5)
        TeleportEvent:FireServer("Chosen", nil, 1)
    end
    task.spawn(function()
        while true do
            TeleportAdd(3); TeleportAdd(2); TeleportAdd(1)
            task.wait(0.3)
        end
    end)
end

--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

-- Player refs
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- Real-time blur on load
local camera = workspace.CurrentCamera
local Blur = Instance.new("BlurEffect")
Blur.Enabled = true
Blur.Size = 0
Blur.Parent = camera

-- Remove any old UI duplicates
for _, n in ipairs({"DiamondFarmGUI","AutoFarmDiamondsGUI"}) do
    local f = PlayerGui:FindFirstChild(n)
    if f then f:Destroy() end
end

-- ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoFarmDiamondsGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = PlayerGui

-- Root panel (smaller)
local Root = Instance.new("Frame")
Root.Name = "Root"
Root.Size = UDim2.new(0, 360, 0, 200)
Root.Position = UDim2.new(0.5, 0, 0.48, 0)
Root.AnchorPoint = Vector2.new(0.5, 0.5)
Root.BackgroundColor3 = Color3.fromRGB(18, 38, 22)
Root.BackgroundTransparency = 1
Root.BorderSizePixel = 0
Root.ClipsDescendants = true
Root.Parent = ScreenGui

local RootCorner = Instance.new("UICorner")
RootCorner.CornerRadius = UDim.new(0, 14)
RootCorner.Parent = Root

local RootStroke = Instance.new("UIStroke")
RootStroke.Thickness = 1
RootStroke.Color = Color3.fromRGB(60, 200, 140)
RootStroke.Transparency = 0.1
RootStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
RootStroke.Parent = Root

-- Glow halo
local Glow = Instance.new("ImageLabel")
Glow.Name = "Glow"
Glow.BackgroundTransparency = 1
Glow.AnchorPoint = Vector2.new(0.5, 0.5)
Glow.Position = UDim2.fromScale(0.5, 0.5)
Glow.Size = UDim2.new(1, 80, 1, 80)
Glow.Image = "rbxasset://textures/whiteSquare.png"
Glow.ImageColor3 = Color3.fromRGB(60, 210, 150)
Glow.ImageTransparency = 0.86
Glow.ScaleType = Enum.ScaleType.Slice
Glow.SliceCenter = Rect.new(10,10,246,246)
Glow.Parent = Root

-- Background gradient
local Bg = Instance.new("Frame")
Bg.Name = "Background"
Bg.Size = UDim2.fromScale(1, 1)
Bg.BackgroundColor3 = Root.BackgroundColor3
Bg.BackgroundTransparency = 1
Bg.BorderSizePixel = 0
Bg.Parent = Root

local BgCorner = Instance.new("UICorner")
BgCorner.CornerRadius = UDim.new(0, 14)
BgCorner.Parent = Bg

local BgGradient = Instance.new("UIGradient")
BgGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0.0, Color3.fromRGB(22, 56, 32)),
    ColorSequenceKeypoint.new(1.0, Color3.fromRGB(18, 96, 58))
})
BgGradient.Rotation = 90
BgGradient.Parent = Bg

-- Header bar
local HeaderBar = Instance.new("Frame")
HeaderBar.Name = "HeaderBar"
HeaderBar.BackgroundTransparency = 1
HeaderBar.Size = UDim2.new(1, -16, 0, 34)
HeaderBar.Position = UDim2.new(0, 8, 0, 8)
HeaderBar.Parent = Root

local Left = Instance.new("Frame")
Left.BackgroundTransparency = 1
Left.Size = UDim2.new(0.5, -4, 1, 0)
Left.Parent = HeaderBar

local Right = Instance.new("Frame")
Right.BackgroundTransparency = 1
Right.Size = UDim2.new(0.5, -4, 1, 0)
Right.Position = UDim2.new(0.5, 8, 0, 0)
Right.Parent = HeaderBar

-- Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.BackgroundTransparency = 1
Title.AnchorPoint = Vector2.new(0, 1)
Title.Position = UDim2.new(0, 0, 1, 0)
Title.Size = UDim2.new(1, 0, 1, 0)
Title.Text = "OverHub Autofarm"
Title.Font = Enum.Font.GothamBold
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextTransparency = 1
Title.Parent = Left

-- Right buttons container
local RightButtons = Instance.new("Frame")
RightButtons.BackgroundTransparency = 1
RightButtons.Size = UDim2.new(1, 0, 1, 0)
RightButtons.Parent = Right

-- Copy Discord button
local CopyBtn = Instance.new("TextButton")
CopyBtn.Name = "CopyDiscord"
CopyBtn.AnchorPoint = Vector2.new(1, 1)
CopyBtn.Position = UDim2.new(1, 0, 1, 0)
CopyBtn.Size = UDim2.new(0, 150, 1, 2)
CopyBtn.BackgroundTransparency = 1
CopyBtn.Text = "Copy Discord Link"
CopyBtn.Font = Enum.Font.GothamBold
CopyBtn.TextScaled = true
CopyBtn.TextColor3 = Color3.fromRGB(60, 200, 140)
CopyBtn.Parent = RightButtons

local CopyCorner = Instance.new("UICorner")
CopyCorner.CornerRadius = UDim.new(0, 10)
CopyCorner.Parent = CopyBtn

local CopyStroke = Instance.new("UIStroke")
CopyStroke.Thickness = 1
CopyStroke.Color = Color3.fromRGB(60, 200, 140)
CopyStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
CopyStroke.Parent = CopyBtn

-- Info button (bottom-right)
local InfoBtn = Instance.new("TextButton")
InfoBtn.Name = "InfoBtn"
InfoBtn.AnchorPoint = Vector2.new(1, 1)
InfoBtn.Position = UDim2.new(1, -10, 1, -10)
InfoBtn.Size = UDim2.new(0, 118, 0, 28)
InfoBtn.BackgroundTransparency = 1
InfoBtn.Text = "Info"
InfoBtn.Font = Enum.Font.GothamBold
InfoBtn.TextScaled = true
InfoBtn.TextColor3 = Color3.fromRGB(60, 200, 140)
InfoBtn.Parent = Root

local InfoCorner = Instance.new("UICorner")
InfoCorner.CornerRadius = UDim.new(0, 10)
InfoCorner.Parent = InfoBtn

local InfoStroke = Instance.new("UIStroke")
InfoStroke.Thickness = 1
InfoStroke.Color = Color3.fromRGB(60, 200, 140)
InfoStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
InfoStroke.Parent = InfoBtn

-- Center status
local Status = Instance.new("TextLabel")
Status.Name = "Status"
Status.BackgroundTransparency = 1
Status.Size = UDim2.new(1, -28, 0, 70)
Status.Position = UDim2.new(0, 14, 0.46, -35)
Status.Text = "AUTOFARM: ON"
Status.Font = Enum.Font.GothamBlack
Status.TextScaled = true
Status.TextColor3 = Color3.fromRGB(95, 255, 185)
Status.TextTransparency = 1
Status.Parent = Root

local StatusGlow = Instance.new("Frame")
StatusGlow.Name = "StatusGlow"
StatusGlow.BackgroundColor3 = Color3.fromRGB(95, 255, 185)
StatusGlow.BackgroundTransparency = 0.88
StatusGlow.Size = UDim2.new(0.92, 0, 0, 74)
StatusGlow.Position = UDim2.new(0.04, 0, 0.46, -37)
StatusGlow.BorderSizePixel = 0
StatusGlow.Parent = Root

local StatusGlowCorner = Instance.new("UICorner")
StatusGlowCorner.CornerRadius = UDim.new(0, 12)
StatusGlowCorner.Parent = StatusGlow

local StatusGlowGrad = Instance.new("UIGradient")
StatusGlowGrad.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0.0, Color3.fromRGB(95, 255, 185)),
    ColorSequenceKeypoint.new(1.0, Color3.fromRGB(60, 220, 150))
})
StatusGlowGrad.Transparency = NumberSequence.new{
    NumberSequenceKeypoint.new(0.0, 0.35),
    NumberSequenceKeypoint.new(0.5, 0.75),
    NumberSequenceKeypoint.new(1.0, 1.0)
}
StatusGlowGrad.Parent = StatusGlow

-- Bottom diamond counter label
local DiamondCountLabel = Instance.new("TextLabel")
DiamondCountLabel.Name = "DiamondCountLabel"
DiamondCountLabel.BackgroundTransparency = 1
DiamondCountLabel.Size = UDim2.new(1, -20, 0, 20)
DiamondCountLabel.Position = UDim2.new(0, 10, 1, -24)
DiamondCountLabel.Text = "Diamonds: 0"
DiamondCountLabel.Font = Enum.Font.GothamBold
DiamondCountLabel.TextScaled = true
DiamondCountLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
DiamondCountLabel.TextXAlignment = Enum.TextXAlignment.Left
DiamondCountLabel.TextTransparency = 1
DiamondCountLabel.Parent = Root

-- Info Tab (hidden by default)
local InfoTab = Instance.new("Frame")
InfoTab.Name = "InfoTab"
InfoTab.Visible = false
InfoTab.Size = UDim2.fromScale(1, 1)
InfoTab.BackgroundTransparency = 1
InfoTab.Parent = Root

local InfoBackdrop = Instance.new("Frame")
InfoBackdrop.Name = "InfoBackdrop"
InfoBackdrop.Size = UDim2.new(1, 0, 1, 0)
InfoBackdrop.BackgroundColor3 = Color3.fromRGB(18, 38, 22)
InfoBackdrop.BackgroundTransparency = 0.06
InfoBackdrop.Parent = InfoTab

local InfoBackdropCorner = Instance.new("UICorner")
InfoBackdropCorner.CornerRadius = UDim.new(0, 14)
InfoBackdropCorner.Parent = InfoBackdrop

local InfoBackdropStroke = Instance.new("UIStroke")
InfoBackdropStroke.Thickness = 1
InfoBackdropStroke.Color = Color3.fromRGB(60, 200, 140)
InfoBackdropStroke.Transparency = 0.1
InfoBackdropStroke.Parent = InfoBackdrop

-- Info header
local InfoHeader = Instance.new("TextLabel")
InfoHeader.Name = "InfoHeader"
InfoHeader.BackgroundTransparency = 1
InfoHeader.Size = UDim2.new(1, -16, 0, 30)
InfoHeader.Position = UDim2.new(0, 8, 0, 8)
InfoHeader.Text = "Changelogs"
InfoHeader.Font = Enum.Font.GothamBlack
InfoHeader.TextScaled = true
InfoHeader.TextColor3 = Color3.fromRGB(255, 255, 255)
InfoHeader.Parent = InfoBackdrop

-- Close (X) button
local CloseInfo = Instance.new("TextButton")
CloseInfo.Name = "CloseInfo"
CloseInfo.AnchorPoint = Vector2.new(1, 0)
CloseInfo.Position = UDim2.new(1, -8, 0, 8)
CloseInfo.Size = UDim2.new(0, 28, 0, 28)
CloseInfo.BackgroundTransparency = 1
CloseInfo.Text = "✕"
CloseInfo.Font = Enum.Font.GothamBold
CloseInfo.TextScaled = true
CloseInfo.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseInfo.Parent = InfoBackdrop

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseInfo

local CloseStroke = Instance.new("UIStroke")
CloseStroke.Thickness = 1
CloseStroke.Color = Color3.fromRGB(60, 200, 140)
CloseStroke.Parent = CloseInfo

-- Scrollable changelog body
local InfoBody = Instance.new("ScrollingFrame")
InfoBody.Name = "InfoBody"
InfoBody.Active = true
InfoBody.BorderSizePixel = 0
InfoBody.BackgroundTransparency = 1
InfoBody.Size = UDim2.new(1, -16, 1, -50)
InfoBody.Position = UDim2.new(0, 8, 0, 42)
InfoBody.CanvasSize = UDim2.new(0, 0, 0, 0)
InfoBody.ScrollBarThickness = 4
InfoBody.Parent = InfoBackdrop

-- add log line helper
local function addLogLine(parent, text)
    local lbl = Instance.new("TextLabel")
    lbl.BackgroundTransparency = 1
    lbl.Size = UDim2.new(1, -4, 0, 18)
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Text = text
    lbl.Font = Enum.Font.Gotham
    lbl.TextScaled = true
    lbl.TextColor3 = Color3.fromRGB(220, 255, 240)
    lbl.Parent = parent
end

-- Fill changelogs safely
local function populateChangelogs()
    InfoBody:ClearAllChildren()
    local list = Instance.new("UIListLayout")
    list.Padding = UDim.new(0, 6)
    list.SortOrder = Enum.SortOrder.LayoutOrder
    list.Parent = InfoBody

    addLogLine(InfoBody, "[+] AutoExecute always enabled with queue_on_teleport flow.")
    addLogLine(InfoBody, "[+] Auto Party/Teleport add spam integrated for place 79546208627805.")
    addLogLine(InfoBody, "[+] Death detection with auto server-hop recovery.")
    addLogLine(InfoBody, "[+] Stronghold chest teleport + prompt spam + lock hover.")
    addLogLine(InfoBody, "[+] Diamond counter bound to in-game Interface label.")
    addLogLine(InfoBody, "[+] Server hopping with markers for re-exec.")
    addLogLine(InfoBody, "[-] Webhook system excluded by request.")
    addLogLine(InfoBody, "[-] New-code autofarm path not used; original autofarm retained.")
    addLogLine(InfoBody, "[+] https://discord.gg/overhub — Join the discord server for early access and updates!")

    task.wait()
    InfoBody.CanvasSize = UDim2.new(0, 0, 0, list.AbsoluteContentSize.Y + 8)
end

-- Helper tween
local function tween(obj, ti, props)
    TweenService:Create(obj, ti, props):Play()
end

-- Fade-in sequence
task.spawn(function()
    tween(Blur, TweenInfo.new(0.30, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = 16})
    task.wait(0.18)
    tween(Blur, TweenInfo.new(0.20, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = 12})
    tween(Root, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0.06})
    tween(Bg, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
    tween(Title, TweenInfo.new(0.18, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
    tween(Status, TweenInfo.new(0.24, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
    tween(DiamondCountLabel, TweenInfo.new(0.16, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
    tween(Glow, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 0.86})
end)

-- Clipboard handling
local DISCORD_LINK = "https://discord.gg/overhub"
local HiddenCopyBox = Instance.new("TextBox")
HiddenCopyBox.Name = "HiddenCopyBox"
HiddenCopyBox.Size = UDim2.new(0, 1, 0, 1)
HiddenCopyBox.Position = UDim2.new(1, 9999, 1, 9999)
HiddenCopyBox.TextEditable = true
HiddenCopyBox.ClearTextOnFocus = false
HiddenCopyBox.Text = ""
HiddenCopyBox.Parent = ScreenGui

local function copyWithExecutor(text)
    local env = getfenv and getfenv() or _G
    local f = (env and env.setclipboard) or _G.setclipboard or _G.toclipboard
    if f and typeof(f) == "function" then
        return pcall(f, text)
    end
    return false
end
local function copyWithSetCore(text)
    local tries, max = 0, 14
    while tries < max do
        tries += 1
        local ok = pcall(function() StarterGui:SetCore("SetClipboard", text) end)
        if ok then return true end
        task.wait(0.12)
    end
    return false
end
local function copyWithTextBox(text)
    HiddenCopyBox.Text = text
    HiddenCopyBox:CaptureFocus()
    HiddenCopyBox.CursorPosition = #HiddenCopyBox.Text + 1
    HiddenCopyBox.SelectionStart = 1
    return false
end
local function doCopy(text)
    if copyWithExecutor(text) then return true end
    if copyWithSetCore(text) then return true end
    copyWithTextBox(text)
    return false
end

CopyBtn.MouseEnter:Connect(function()
    tween(CopyBtn, TweenInfo.new(0.12, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(110, 255, 195)})
end)
CopyBtn.MouseLeave:Connect(function()
    tween(CopyBtn, TweenInfo.new(0.12, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(60, 200, 140)})
end)
CopyBtn.MouseButton1Click:Connect(function()
    local ok = doCopy(DISCORD_LINK)
    local orig = CopyStroke.Color
    CopyStroke.Color = ok and Color3.fromRGB(120, 255, 200) or Color3.fromRGB(255, 180, 140)
    TweenService:Create(CopyBtn, TweenInfo.new(0.08, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, true),
        {Size = UDim2.new(0, 146, 1, 0)}):Play()
    task.delay(0.18, function() CopyStroke.Color = orig end)
end)

-- Info tab toggling with protection
local function showInfo()
    pcall(populateChangelogs)
    for _, child in ipairs(Root:GetChildren()) do
        if child ~= InfoTab and child:IsA("GuiObject") then
            child.Visible = false
        end
    end
    InfoTab.Visible = true
end
local function hideInfo()
    InfoTab.Visible = false
    for _, child in ipairs(Root:GetChildren()) do
        if child ~= InfoTab and child:IsA("GuiObject") then
            child.Visible = true
        end
    end
end
InfoBtn.MouseButton1Click:Connect(showInfo)
CloseInfo.MouseButton1Click:Connect(hideInfo)

-- Draggable GUI
local dragging, dragStart, startPos, dragInput = false, nil, nil, nil
local function updateDrag(input)
    local delta = input.Position - dragStart
    Root.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
Root.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Root.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
Root.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

-- Expose for snippet 2
_G.OverhubUI = {
    Root = Root,
    DiamondCountLabel = DiamondCountLabel,
    StarterGui = StarterGui,
}
-- Core services and refs
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local Player = Players.LocalPlayer
local PlaceID = game.PlaceId
local TakeDiamonds = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("RequestTakeDiamonds")
local ItemsFolder = Workspace:WaitForChild("Items")

local ui = _G.OverhubUI or {}
local DiamondCountLabel = ui.DiamondCountLabel
local StarterGui = ui.StarterGui

-- Diamond count
local username = Player.Name
local function getDiamondCount()
    local ok, result = pcall(function()
        local obj = Players[username].PlayerGui.Interface.DiamondCount.Count
        return tonumber(obj.Text) or 0
    end)
    return ok and result or 0
end

-- Notification helper for real collection
local lastCount = getDiamondCount()
local function tryNotifyCollected(newCount, oldCount)
    if newCount and oldCount and newCount > oldCount then
        pcall(function()
            StarterGui:SetCore("SendNotification", {
                Title = "Collected 1 Diamond",
                Text = "Balance: " .. tostring(newCount),
                Duration = 2
            })
        end)
    end
end

local function updateDiamondCountDisplay()
    local n = getDiamondCount()
    if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. n end
    return n
end

local function setupDiamondCountListener()
    local ok, obj = pcall(function()
        return Players[username].PlayerGui.Interface.DiamondCount.Count
    end)
    if ok and obj and obj:IsA("TextLabel") then
        obj:GetPropertyChangedSignal("Text"):Connect(function()
            local before = lastCount
            local now = tonumber(obj.Text) or before
            lastCount = now
            if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. now end
            tryNotifyCollected(now, before)
        end)
        lastCount = tonumber(obj.Text) or lastCount
        if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. lastCount end
    else
        task.spawn(function()
            while true do
                local before = lastCount
                local now = getDiamondCount()
                if now ~= before then
                    lastCount = now
                    if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. now end
                    tryNotifyCollected(now, before)
                end
                task.wait(1)
            end
        end)
    end
end
task.spawn(setupDiamondCountListener)

-- Track HRP
local HRP
local function updateHRP()
    if Player.Character then
        HRP = Player.Character:WaitForChild("HumanoidRootPart")
    end
end
updateHRP()
Player.CharacterAdded:Connect(function()
    updateHRP()
    task.delay(1, function()
        lastCount = getDiamondCount()
        if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. lastCount end
    end)
end)

-- Old autofarm collect logic
local activeDiamonds = {}
local function collectDiamond(diamond)
    if activeDiamonds[diamond] then return end
    activeDiamonds[diamond] = true
    task.spawn(function()
        while diamond.Parent and HRP do
            pcall(TakeDiamonds.FireServer, TakeDiamonds, diamond)
            pcall(function() HRP.CFrame = diamond.CFrame + Vector3.new(0,3,0) end)
            task.wait(0.02)
        end
        activeDiamonds[diamond] = nil
    end)
end

local function scanForDiamonds()
    for _, diamond in ipairs(ItemsFolder:GetChildren()) do
        if string.find(string.lower(diamond.Name), "diamond") then
            collectDiamond(diamond)
        end
    end
end

ItemsFolder.ChildAdded:Connect(function(child)
    if string.find(string.lower(child.Name), "diamond") then
        collectDiamond(child)
    end
end)

-- Chest proximity spam
local function fireChestPrompts()
    local chests = {}
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if (obj:IsA("Model") or obj:IsA("Part")) and string.find(string.lower(obj.Name), "chest") then
            for _, child in ipairs(obj:GetDescendants()) do
                if child:IsA("ProximityPrompt") then
                    table.insert(chests, child)
                end
            end
        end
    end
    for _, chest in ipairs(chests) do
        task.spawn(function()
            for i = 1, 8 do
                pcall(fireproximityprompt, chest)
                task.wait(0.05)
            end
        end)
    end
    return #chests
end

-- Stronghold chest helpers
local function findStrongholdChestPart()
    local chest = Workspace:FindFirstChild("Stronghold Diamond Chest")
    if chest then
        local primary = chest:FindFirstChild("PrimaryPart") or chest:FindFirstChildWhichIsA("BasePart")
        if primary then return primary end
    end
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and string.find(obj.Name:lower(), "stronghold") and string.find(obj.Name:lower(), "chest") then
            local primary = obj:FindFirstChild("PrimaryPart") or obj:FindFirstChildWhichIsA("BasePart")
            if primary then return primary end
        end
    end
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if (obj:IsA("Model") or obj:IsA("Part")) and string.find(obj.Name:lower(), "stronghold") then
            local primary = obj:FindFirstChild("PrimaryPart") or obj:FindFirstChildWhichIsA("BasePart")
            if primary then return primary end
        end
    end
    return nil
end

local function teleportToChest()
    if not HRP then return false end
    local chestPart = findStrongholdChestPart()
    if chestPart then
        if DiamondCountLabel then DiamondCountLabel.Text = "Teleporting to chest..." end
        pcall(function()
            HRP.CFrame = chestPart.CFrame + Vector3.new(0, 5, 0)
        end)
        for _, child in ipairs(chestPart.Parent:GetDescendants()) do
            if child:IsA("ProximityPrompt") then
                for i = 1, 8 do
                    pcall(fireproximityprompt, child)
                    task.wait(0.05)
                end
            end
        end
        return true
    end
    return false
end

local function lockAboveStrongholdChest()
    local chestPart = findStrongholdChestPart()
    if chestPart and HRP then
        task.spawn(function()
            while chestPart.Parent and HRP do
                pcall(function()
                    HRP.CFrame = chestPart.CFrame + Vector3.new(0, 5, 0)
                end)
                task.wait(0.1)
            end
        end)
    end
end

-- Server hop with re-exec
local function hopToRandomServer()
    local servers = {}
    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"))
    end)
    if success and result and result.data then
        for _, server in ipairs(result.data) do
            if server.playing < server.maxPlayers and server.id ~= game.JobId then
                table.insert(servers, server.id)
            end
        end
        if #servers > 0 then
            TeleportService:TeleportToPlaceInstance(PlaceID, servers[math.random(1, #servers)], Player)
            return true
        else
            TeleportService:Teleport(PlaceID, Player)
            return true
        end
    else
        TeleportService:Teleport(PlaceID, Player)
        return true
    end
end

local function prepareForTeleport()
    local teleportMarker = Instance.new("BoolValue")
    teleportMarker.Name = "DiamondFarmTeleported"
    teleportMarker.Value = true
    teleportMarker.Parent = ReplicatedStorage
end

local function setupAutoReexecute()
    if not ReplicatedStorage:FindFirstChild("DiamondFarmMarker") then
        local marker = Instance.new("StringValue")
        marker.Name = "DiamondFarmMarker"
        marker.Value = "DiamondFarmScript"
        marker.Parent = ReplicatedStorage
    end
    if ReplicatedStorage:FindFirstChild("DiamondFarmTeleported") then
        ReplicatedStorage:FindFirstChild("DiamondFarmTeleported"):Destroy()
        task.wait(2)
        startFarmingLoop()
        return
    end
end

local function hopWithAuto()
    prepareForTeleport()
    local ok = pcall(hopToRandomServer)
    if not ok then
        pcall(function() TeleportService:Teleport(PlaceID, Player) end)
    end
    return true
end

-- Death detection + Characters cleanup
local displayName = Player.DisplayName
local function isPlayerDead()
    local charactersFolder = Workspace:FindFirstChild("Characters")
    if charactersFolder then
        for _, child in ipairs(charactersFolder:GetChildren()) do
            if string.find(child.Name:lower(), Player.Name:lower()) or
               (displayName and string.find(child.Name:lower(), displayName:lower())) then
                return true
            end
        end
    end
    if Player.Character then
        local humanoid = Player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.Health <= 0 then
            return true
        end
    end
    return false
end

local function cleanupCharactersFolder()
    local charactersFolder = Workspace:FindFirstChild("Characters")
    if charactersFolder then
        for _, child in ipairs(charactersFolder:GetChildren()) do
            local keep = false
            if string.find(child.Name:lower(), Player.Name:lower()) then keep = true end
            if displayName and string.find(child.Name:lower(), displayName:lower()) then keep = true end
            if not keep then pcall(function() child:Destroy() end) end
        end
    end
end
cleanupCharactersFolder()

-- Main loop (guarded)
function startFarmingLoop()
    task.spawn(function()
        local hopCounter = 0
        local chestCheck = 0
        local serverStartTime = tick()
        local MaxServerTime = 15

        lastCount = getDiamondCount()
        if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. lastCount end

        while true do
            cleanupCharactersFolder()

            if tick() - serverStartTime > MaxServerTime then
                if DiamondCountLabel then DiamondCountLabel.Text = "Auto-hopping (timeout)" end
                hopWithAuto()
                serverStartTime = tick()
                task.wait(2)
            end

            if isPlayerDead() then
                if DiamondCountLabel then DiamondCountLabel.Text = "Dead, hopping..." end
                hopWithAuto()
                serverStartTime = tick()
                task.wait(5)
                lastCount = getDiamondCount()
            end

            if Player.Character and HRP then
                pcall(fireChestPrompts)
                pcall(scanForDiamonds)

                chestCheck += 1
                if chestCheck >= 1 then
                    chestCheck = 0
                    if teleportToChest() then
                        if DiamondCountLabel then DiamondCountLabel.Text = "Found chest!" end
                        lockAboveStrongholdChest()
                        task.wait(1)
                    end
                end

                hopCounter += 1
                if hopCounter >= 3 then
                    hopCounter = 0
                    if DiamondCountLabel then DiamondCountLabel.Text = "Hopping servers..." end
                    hopWithAuto()
                    serverStartTime = tick()
                    task.wait(3)
                    lastCount = getDiamondCount()
                else
                    task.wait(0.5)
                end
            else
                task.wait(0.5)
            end
        end
    end)
end

TeleportService.TeleportInitFailed:Connect(function(plr, result, err)
    task.wait(0.5)
    hopWithAuto()
end)

setupAutoReexecute()
startFarmingLoop()
