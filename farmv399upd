-- SNIPPET 1/2

queue_on_teleport('loadstring(game:HttpGet("https://raw.githubusercontent.com/hellattexyss/testfarm/refs/heads/main/farmv399upd"))()')  -- [attached_file:1]

local WEBHOOK_URL = rawget(getfenv() or _G, "Webhook") or _G.Webhook
if type(WEBHOOK_URL) ~= "string" then WEBHOOK_URL = "" end  -- [attached_file:1]

if game.PlaceId == 79546208627805 then
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents", 9e9)
    local TeleportEvent = RemoteEvents:WaitForChild("TeleportEvent", 9e9)
    local function TeleportAdd(num)
        local args = { [1] = "Add", [2] = num }
        TeleportEvent:FireServer(unpack(args))
        task.wait(0.5)
        TeleportEvent:FireServer("Chosen", nil, 1)
    end
    task.spawn(function()
        while true do
            TeleportAdd(3) TeleportAdd(2) TeleportAdd(1)
            task.wait(0.3)
        end
    end)
end  -- [attached_file:1]

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")  -- [attached_file:1]

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")  -- [attached_file:1]

local camera = workspace.CurrentCamera
local Blur = Instance.new("BlurEffect")
Blur.Enabled = true
Blur.Size = 0
Blur.Parent = camera  -- [attached_file:1]

for _, n in ipairs({"DiamondFarmGUI","AutoFarmDiamondsGUI"}) do
    local f = PlayerGui:FindFirstChild(n)
    if f then f:Destroy() end
end  -- [attached_file:1]

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoFarmDiamondsGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = PlayerGui  -- [attached_file:1]

local Root = Instance.new("Frame")
Root.Name = "Root"
Root.Size = UDim2.new(0, 360, 0, 200)
Root.Position = UDim2.new(0.5, 0, 0.48, 0)
Root.AnchorPoint = Vector2.new(0.5, 0.5)
Root.BackgroundColor3 = Color3.fromRGB(18, 38, 22)
Root.BackgroundTransparency = 1
Root.BorderSizePixel = 0
Root.ClipsDescendants = true
Root.Active = true
Root.Selectable = true
Root.Parent = ScreenGui  -- [attached_file:1]

local RootCorner = Instance.new("UICorner")
RootCorner.CornerRadius = UDim.new(0, 14)
RootCorner.Parent = Root  -- [attached_file:1]

local RootStroke = Instance.new("UIStroke")
RootStroke.Thickness = 1
RootStroke.Color = Color3.fromRGB(60, 200, 140)
RootStroke.Transparency = 0.1
RootStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
RootStroke.Parent = Root  -- [attached_file:1]

local Glow = Instance.new("ImageLabel")
Glow.Name = "Glow"
Glow.BackgroundTransparency = 1
Glow.AnchorPoint = Vector2.new(0.5, 0.5)
Glow.Position = UDim2.fromScale(0.5, 0.5)
Glow.Size = UDim2.new(1, 80, 1, 80)
Glow.Image = "rbxasset://textures/whiteSquare.png"
Glow.ImageColor3 = Color3.fromRGB(60, 210, 150)
Glow.ImageTransparency = 0.86
Glow.ScaleType = Enum.ScaleType.Slice
Glow.SliceCenter = Rect.new(10,10,246,246)
Glow.Parent = Root  -- [attached_file:1]

local Bg = Instance.new("Frame")
Bg.Name = "Background"
Bg.Size = UDim2.fromScale(1, 1)
Bg.BackgroundColor3 = Root.BackgroundColor3
Bg.BackgroundTransparency = 1
Bg.BorderSizePixel = 0
Bg.Parent = Root  -- [attached_file:1]

local BgCorner = Instance.new("UICorner")
BgCorner.CornerRadius = UDim.new(0, 14)
BgCorner.Parent = Bg  -- [attached_file:1]

local BgGradient = Instance.new("UIGradient")
BgGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0.0, Color3.fromRGB(22, 56, 32)),
    ColorSequenceKeypoint.new(1.0, Color3.fromRGB(18, 96, 58))
})
BgGradient.Rotation = 90
BgGradient.Parent = Bg  -- [attached_file:1]

local HeaderBar = Instance.new("Frame")
HeaderBar.Name = "HeaderBar"
HeaderBar.BackgroundTransparency = 1
HeaderBar.Size = UDim2.new(1, -16, 0, 34)
HeaderBar.Position = UDim2.new(0, 8, 0, 8)
HeaderBar.Parent = Root  -- [attached_file:1]

local Left = Instance.new("Frame")
Left.BackgroundTransparency = 1
Left.Size = UDim2.new(0.5, -4, 1, 0)
Left.Parent = HeaderBar  -- [attached_file:1]

local Right = Instance.new("Frame")
Right.BackgroundTransparency = 1
Right.Size = UDim2.new(0.5, -4, 1, 0)
Right.Position = UDim2.new(0.5, 8, 0, 0)
Right.Parent = HeaderBar  -- [attached_file:1]

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.BackgroundTransparency = 1
Title.AnchorPoint = Vector2.new(0, 1)
Title.Position = UDim2.new(0, 0, 1, 0)
Title.Size = UDim2.new(1, 0, 1, 0)
Title.Text = "OverHub Autofarm"
Title.Font = Enum.Font.GothamBold
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextTransparency = 1
Title.Parent = Left  -- [attached_file:1]

local RightButtons = Instance.new("Frame")
RightButtons.BackgroundTransparency = 1
RightButtons.Size = UDim2.new(1, 0, 1, 0)
RightButtons.Parent = Right  -- [attached_file:1]

local CopyBtn = Instance.new("TextButton")
CopyBtn.Name = "CopyDiscord"
CopyBtn.AnchorPoint = Vector2.new(1, 1)
CopyBtn.Position = UDim2.new(1, 0, 1, 0)
CopyBtn.Size = UDim2.new(0, 150, 1, 2)
CopyBtn.BackgroundTransparency = 1
CopyBtn.Text = "Copy Discord Link"
CopyBtn.Font = Enum.Font.GothamBold
CopyBtn.TextScaled = true
CopyBtn.TextColor3 = Color3.fromRGB(60, 200, 140)
CopyBtn.Parent = RightButtons  -- [attached_file:1]

local CopyCorner = Instance.new("UICorner")
CopyCorner.CornerRadius = UDim.new(0, 10)
CopyCorner.Parent = CopyBtn

local CopyStroke = Instance.new("UIStroke")
CopyStroke.Thickness = 1
CopyStroke.Color = Color3.fromRGB(60, 200, 140)
CopyStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
CopyStroke.Parent = CopyBtn  -- [attached_file:1]

local InfoBtn = Instance.new("TextButton")
InfoBtn.Name = "InfoBtn"
InfoBtn.AnchorPoint = Vector2.new(1, 1)
InfoBtn.Position = UDim2.new(1, -10, 1, -10)
InfoBtn.Size = UDim2.new(0, 118, 0, 28)
InfoBtn.BackgroundTransparency = 1
InfoBtn.Text = "Info"
InfoBtn.Font = Enum.Font.GothamBold
InfoBtn.TextScaled = true
InfoBtn.TextColor3 = Color3.fromRGB(60, 200, 140)
InfoBtn.Parent = Root  -- [attached_file:1]

local InfoCorner = Instance.new("UICorner")
InfoCorner.CornerRadius = UDim.new(0, 10)
InfoCorner.Parent = InfoBtn

local InfoStroke = Instance.new("UIStroke")
InfoStroke.Thickness = 1
InfoStroke.Color = Color3.fromRGB(60, 200, 140)
InfoStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
InfoStroke.Parent = InfoBtn  -- [attached_file:1]

local Status = Instance.new("TextLabel")
Status.Name = "Status"
Status.BackgroundTransparency = 1
Status.Size = UDim2.new(1, -28, 0, 70)
Status.Position = UDim2.new(0, 14, 0.46, -35)
Status.Text = "AUTOFARM: ON"
Status.Font = Enum.Font.GothamBlack
Status.TextScaled = true
Status.TextColor3 = Color3.fromRGB(95, 255, 185)
Status.TextTransparency = 1
Status.Parent = Root  -- [attached_file:1]

local StatusGlow = Instance.new("Frame")
StatusGlow.Name = "StatusGlow"
StatusGlow.BackgroundColor3 = Color3.fromRGB(95, 255, 185)
StatusGlow.BackgroundTransparency = 0.88
StatusGlow.Size = UDim2.new(0.92, 0, 0, 74)
StatusGlow.Position = UDim2.new(0.04, 0, 0.46, -37)
StatusGlow.BorderSizePixel = 0
StatusGlow.Parent = Root  -- [attached_file:1]

local StatusGlowCorner = Instance.new("UICorner")
StatusGlowCorner.CornerRadius = UDim.new(0, 12)
StatusGlowCorner.Parent = StatusGlow

local StatusGlowGrad = Instance.new("UIGradient")
StatusGlowGrad.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0.0, Color3.fromRGB(95, 255, 185)),
    ColorSequenceKeypoint.new(1.0, Color3.fromRGB(60, 220, 150))
})
StatusGlowGrad.Transparency = NumberSequence.new{
    NumberSequenceKeypoint.new(0.0, 0.35),
    NumberSequenceKeypoint.new(0.5, 0.75),
    NumberSequenceKeypoint.new(1.0, 1.0)
}
StatusGlowGrad.Parent = StatusGlow  -- [attached_file:1]

local DiamondCountLabel = Instance.new("TextLabel")
DiamondCountLabel.Name = "DiamondCountLabel"
DiamondCountLabel.BackgroundTransparency = 1
DiamondCountLabel.Size = UDim2.new(1, -20, 0, 20)
DiamondCountLabel.Position = UDim2.new(0, 10, 1, -24)
DiamondCountLabel.Text = "Diamonds: 0"
DiamondCountLabel.Font = Enum.Font.GothamBold
DiamondCountLabel.TextScaled = true
DiamondCountLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
DiamondCountLabel.TextXAlignment = Enum.TextXAlignment.Left
DiamondCountLabel.TextTransparency = 1
DiamondCountLabel.Parent = Root  -- [attached_file:1]

local InfoTab = Instance.new("Frame")
InfoTab.Name = "InfoTab"
InfoTab.Visible = false
InfoTab.Size = UDim2.fromScale(1, 1)
InfoTab.BackgroundTransparency = 1
InfoTab.Parent = Root  -- [attached_file:1]

local InfoBackdrop = Instance.new("Frame")
InfoBackdrop.Name = "InfoBackdrop"
InfoBackdrop.Size = UDim2.new(1, 0, 1, 0)
InfoBackdrop.BackgroundColor3 = Color3.fromRGB(18, 38, 22)
InfoBackdrop.BackgroundTransparency = 0.06
InfoBackdrop.Parent = InfoTab  -- [attached_file:1]

local InfoBackdropCorner = Instance.new("UICorner")
InfoBackdropCorner.CornerRadius = UDim.new(0, 14)
InfoBackdropCorner.Parent = InfoBackdrop

local InfoBackdropStroke = Instance.new("UIStroke")
InfoBackdropStroke.Thickness = 1
InfoBackdropStroke.Color = Color3.fromRGB(60, 200, 140)
InfoBackdropStroke.Transparency = 0.1
InfoBackdropStroke.Parent = InfoBackdrop  -- [attached_file:1]

local InfoHeader = Instance.new("TextLabel")
InfoHeader.Name = "InfoHeader"
InfoHeader.BackgroundTransparency = 1
InfoHeader.Size = UDim2.new(1, -16, 0, 30)
InfoHeader.Position = UDim2.new(0, 8, 0, 8)
InfoHeader.Text = "Changelogs"
InfoHeader.Font = Enum.Font.GothamBlack
InfoHeader.TextScaled = true
InfoHeader.TextColor3 = Color3.fromRGB(255, 255, 255)
InfoHeader.Parent = InfoBackdrop  -- [attached_file:1]

local CloseInfo = Instance.new("TextButton")
CloseInfo.Name = "CloseInfo"
CloseInfo.AnchorPoint = Vector2.new(1, 0)
CloseInfo.Position = UDim2.new(1, -8, 0, 8)
CloseInfo.Size = UDim2.new(0, 28, 0, 28)
CloseInfo.BackgroundTransparency = 1
CloseInfo.Text = "✕"
CloseInfo.Font = Enum.Font.GothamBold
CloseInfo.TextScaled = true
CloseInfo.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseInfo.Parent = InfoBackdrop  -- [attached_file:1]

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseInfo

local CloseStroke = Instance.new("UIStroke")
CloseStroke.Thickness = 1
CloseStroke.Color = Color3.fromRGB(60, 200, 140)
CloseStroke.Parent = CloseInfo  -- [attached_file:1]

local InfoBody = Instance.new("ScrollingFrame")
InfoBody.Name = "InfoBody"
InfoBody.Active = true
InfoBody.BorderSizePixel = 0
InfoBody.BackgroundTransparency = 1
InfoBody.Size = UDim2.new(1, -16, 1, -50)
InfoBody.Position = UDim2.new(0, 8, 0, 42)
InfoBody.CanvasSize = UDim2.new(0, 0, 0, 0)
InfoBody.ScrollBarThickness = 4
InfoBody.Parent = InfoBackdrop  -- [attached_file:1]

local function addLogLine(parent, text)
    local lbl = Instance.new("TextLabel")
    lbl.BackgroundTransparency = 1
    lbl.Size = UDim2.new(1, -4, 0, 18)
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Text = text
    lbl.Font = Enum.Font.Gotham
    lbl.TextScaled = true
    lbl.TextColor3 = Color3.fromRGB(220, 255, 240)
    lbl.Parent = parent
end  -- [attached_file:1]

local function populateChangelogs()
    InfoBody:ClearAllChildren()
    local list = Instance.new("UIListLayout")
    list.Padding = UDim.new(0, 6)
    list.SortOrder = Enum.SortOrder.LayoutOrder
    list.Parent = InfoBody
    addLogLine(InfoBody, "[+] Auto Execute on hop![OP]")
    addLogLine(InfoBody, "[+] Auto Party game start!")
    addLogLine(InfoBody, "[+] Server hop on death.")
    addLogLine(InfoBody, "[+] Stronghold chest teleport.")
    addLogLine(InfoBody, "[+] Diamond counter + notification.")
    addLogLine(InfoBody, "[+] Lag clear on server hop.")
    addLogLine(InfoBody, "[-] Optimized the script!")
    addLogLine(InfoBody, "https://discord.gg/overhub — Join the discord server for early access and updates!")
    task.wait()
    InfoBody.CanvasSize = UDim2.new(0, 0, 0, list.AbsoluteContentSize.Y + 8)
end  -- [attached_file:1]

local function tween(o, ti, props) TweenService:Create(o, ti, props):Play() end
task.spawn(function()
    tween(Blur, TweenInfo.new(0.30, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = 16})
    task.wait(0.18)
    tween(Blur, TweenInfo.new(0.20, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = 12})
    tween(Root, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0.06})
    tween(Bg, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
    tween(Title, TweenInfo.new(0.18, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
    tween(Status, TweenInfo.new(0.24, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
    tween(DiamondCountLabel, TweenInfo.new(0.16, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
    tween(Glow, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 0.86})
end)  -- [attached_file:1]

local DISCORD_LINK = "https://discord.gg/overhub"
local HiddenCopyBox = Instance.new("TextBox")
HiddenCopyBox.Name = "HiddenCopyBox"
HiddenCopyBox.Size = UDim2.new(0, 1, 0, 1)
HiddenCopyBox.Position = UDim2.new(1, 9999, 1, 9999)
HiddenCopyBox.TextEditable = true
HiddenCopyBox.ClearTextOnFocus = false
HiddenCopyBox.Text = ""
HiddenCopyBox.Parent = ScreenGui  -- [attached_file:1]

local function copyWithExecutor(t)
    local env = getfenv and getfenv() or _G
    local f = (env and env.setclipboard) or _G.setclipboard or _G.toclipboard
    if f and typeof(f) == "function" then return pcall(f, t) end
    return false
end
local function copyWithSetCore(t)
    for i=1,14 do
        local ok = pcall(function() StarterGui:SetCore("SetClipboard", t) end)
        if ok then return true end
        task.wait(0.12)
    end
    return false
end
local function copyWithTextBox(t)
    HiddenCopyBox.Text = t
    HiddenCopyBox:CaptureFocus()
    HiddenCopyBox.CursorPosition = #HiddenCopyBox.Text + 1
    HiddenCopyBox.SelectionStart = 1
    return false
end
local function doCopy(t)
    if copyWithExecutor(t) then return true end
    if copyWithSetCore(t) then return true end
    copyWithTextBox(t)
    return false
end  -- [attached_file:1]

CopyBtn.MouseEnter:Connect(function()
    tween(CopyBtn, TweenInfo.new(0.12, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(110, 255, 195)})
end)
CopyBtn.MouseLeave:Connect(function()
    tween(CopyBtn, TweenInfo.new(0.12, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(60, 200, 140)})
end)
CopyBtn.MouseButton1Click:Connect(function()
    local ok = doCopy(DISCORD_LINK)
    local orig = CopyStroke.Color
    CopyStroke.Color = ok and Color3.fromRGB(120, 255, 200) or Color3.fromRGB(255, 180, 140)
    TweenService:Create(CopyBtn, TweenInfo.new(0.08, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, true),
        {Size = UDim2.new(0, 146, 1, 0)}):Play()
    task.delay(0.18, function() CopyStroke.Color = orig end)
end)  -- [attached_file:1]

local function showInfo()
    pcall(populateChangelogs)
    for _, child in ipairs(Root:GetChildren()) do
        if child ~= InfoTab and child:IsA("GuiObject") then child.Visible = false end
    end
    InfoTab.Visible = true
end
local function hideInfo()
    InfoTab.Visible = false
    for _, child in ipairs(Root:GetChildren()) do
        if child ~= InfoTab and child:IsA("GuiObject") then child.Visible = true end
    end
end
InfoBtn.MouseButton1Click:Connect(showInfo)
CloseInfo.MouseButton1Click:Connect(hideInfo)  -- [attached_file:1]

do
    local dragging, dragStart, startPos
    local function updateDrag(input)
        local delta = input.Position - dragStart
        Root.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    Root.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Root.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    Root.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragging then updateDrag(input) end
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateDrag(input)
        end
    end)
end  -- [attached_file:1]

_G.OverhubUI = {
    Root = Root,
    DiamondCountLabel = DiamondCountLabel,
    StarterGui = StarterGui,
    Lighting = Lighting,
    RunService = RunService,
    Debris = Debris,
}
-- end of snippet 1
-- SNIPPET 2/2 (compact)

local Players=game:GetService("Players")
local Workspace=game:GetService("Workspace")
local ReplicatedStorage=game:GetService("ReplicatedStorage")
local TeleportService=game:GetService("TeleportService")
local HttpService=game:GetService("HttpService")
local Lighting=game:GetService("Lighting")
local Player=Players.LocalPlayer
local PlaceID=game.PlaceId
local ui=_G.OverhubUI or {}
local DiamondCountLabel=ui.DiamondCountLabel
local StarterGui=ui.StarterGui
local RunService=ui.RunService
local Debris=ui.Debris
local RemoteEvents=ReplicatedStorage:WaitForChild("RemoteEvents")
local TakeDiamonds=RemoteEvents:WaitForChild("RequestTakeDiamonds")
local ItemsFolder=Workspace:WaitForChild("Items")
local antiLagToken=Instance.new("Folder") antiLagToken.Name="Overhub_Managed" antiLagToken.Parent=Workspace
local function optimizedLagClear()
    pcall(function()
        Lighting.GlobalShadows=false
        Lighting.FogEnd=1e7
        Lighting.Brightness=math.clamp(Lighting.Brightness,1,2)
        for _,eff in ipairs(Lighting:GetChildren()) do
            if eff:IsA("BloomEffect") or eff:IsA("DepthOfFieldEffect") or eff:IsA("SunRaysEffect") or eff:IsA("ColorCorrectionEffect") then eff.Enabled=false end
        end
    end)
    pcall(function()
        local cam=workspace.CurrentCamera
        for _,eff in ipairs(cam:GetChildren()) do
            if eff:IsA("BlurEffect") or eff:IsA("SunRaysEffect") then eff.Enabled=false end
        end
    end)
    pcall(function() settings().Rendering.QualityLevel=Enum.QualityLevel.Level02 end)
    pcall(function() settings().Physics.AllowSleep=true end)
    pcall(function() Debris.MaxItems=80 end)
    local seen=setmetatable({}, {__mode="k"})
    local killClasses={ParticleEmitter=true,Trail=true,Fire=true,Smoke=true,Sparkles=true,PointLight=true,SpotLight=true,SurfaceLight=true,Beam=true}
    local batch=0
    for _,d in ipairs(Workspace:GetDescendants()) do
        if not seen[d] then
            seen[d]=true
            local cn=d.ClassName
            if killClasses[cn] then pcall(function() d.Enabled=false end) end
            if cn=="Decal" or cn=="Texture" then pcall(function() d.Transparency=1 end) end
            if d:IsA("BasePart") then
                pcall(function()
                    d.CastShadow=false
                    d.Reflectance=0
                    if d.Material~=Enum.Material.Plastic then d.Material=Enum.Material.Plastic end
                end)
            end
            batch+=1
            if batch>=350 then batch=0 RunService.Heartbeat:Wait() end
        end
    end
end
task.spawn(function() if PlaceID~=79546208627805 then optimizedLagClear() end end)
local function resolve_request()
    if typeof(request)=="function" then return request end
    if typeof(http_request)=="function" then return http_request end
    if syn and typeof(syn.request)=="function" then return syn.request end
    if fluxus and typeof(fluxus.request)=="function" then return fluxus.request end
    return nil
end
local function canReachDiscord()
    local req=resolve_request()
    if not req then return false end
    local ok=pcall(function() return req({Url="https://discord.com/api/v10",Method="HEAD"}) end)
    return ok
end
local webhookEnabled=(WEBHOOK_URL and WEBHOOK_URL~="" and canReachDiscord())
local function jsonEncodeSafe(tbl)
    local ok,res=pcall(function() return HttpService:JSONEncode(tbl) end)
    return ok and res or nil
end
local queue={} local sending=false
local function enqueue(payload)
    if not webhookEnabled then return end
    queue[#queue+1]=payload
    if sending then return end
    sending=true
    task.spawn(function()
        local req=resolve_request()
        while #queue>0 do
            local pkt=table.remove(queue,1)
            local body=jsonEncodeSafe(pkt)
            if not body then continue end
            local tries,ok=0,false
            while tries<4 do
                tries+=1
                ok=pcall(function()
                    if req then
                        req({Url=WEBHOOK_URL,Method="POST",Headers={["Content-Type"]="application/json"},Body=body})
                    else
                        HttpService:PostAsync(WEBHOOK_URL,body,Enum.HttpContentType.ApplicationJson)
                    end
                end)
                if ok then break end
                task.wait(0.75+math.random()*0.5)
            end
            task.wait(0.1)
        end
        sending=false
    end)
end
local StartTime=tick()
local TotalGained=0
local function embedColor() return 0x3CD28C end
local function fmt(n) return tostring(n) end
local function postEvent(title,desc,fields)
    if not webhookEnabled then return end
    local jobPlayers=#Players:GetPlayers()
    local embed={title=title,description=desc,color=embedColor(),timestamp=DateTime.now():ToIsoDate(),footer={text="OverHub Autofarm • Place "..PlaceID.." • Players "..jobPlayers},fields=fields or {}}
    table.insert(embed.fields,{name="PlaceId",value=tostring(PlaceID),inline=true})
    table.insert(embed.fields,{name="JobId",value=game.JobId or "N/A",inline=true})
    table.insert(embed.fields,{name="Elapsed",value=string.format("%.1fs",tick()-StartTime),inline=true})
    enqueue({embeds={embed}})
end
local username=Player.Name
local function getDiamondCount()
    local ok,result=pcall(function()
        local obj=Players[username].PlayerGui.Interface.DiamondCount.Count
        return tonumber(obj.Text) or 0
    end)
    return ok and result or 0
end
local lastCount=getDiamondCount()
local function tryNotifyCollected(newCount,oldCount)
    if newCount and oldCount and newCount>oldCount then
        pcall(function() StarterGui:SetCore("SendNotification",{Title="Collected Diamond",Text="Balance: "..tostring(newCount),Duration=2}) end)
        TotalGained+=(newCount-oldCount)
    end
end
local function updateDiamondCountDisplay()
    local n=getDiamondCount()
    if DiamondCountLabel then DiamondCountLabel.Text="Diamonds: "..n end
    return n
end
local function setupDiamondCountListener()
    local ok,obj=pcall(function() return Players[username].PlayerGui.Interface.DiamondCount.Count end)
    if ok and obj and obj:IsA("TextLabel") then
        obj:GetPropertyChangedSignal("Text"):Connect(function()
            local before=lastCount
            local now=tonumber(obj.Text) or before
            lastCount=now
            if DiamondCountLabel then DiamondCountLabel.Text="Diamonds: "..now end
            tryNotifyCollected(now,before)
        end)
        lastCount=tonumber(obj.Text) or lastCount
        if DiamondCountLabel then DiamondCountLabel.Text="Diamonds: "..lastCount end
    else
        task.spawn(function()
            while true do
                local before=lastCount
                local now=getDiamondCount()
                if now~=before then
                    lastCount=now
                    if DiamondCountLabel then DiamondCountLabel.Text="Diamonds: "..now end
                    tryNotifyCollected(now,before)
                end
                task.wait(1)
            end
        end)
    end
end
task.spawn(setupDiamondCountListener)
local activeDiamonds={}
local function highlightDiamond(inst)
    local model=inst:IsA("Model") and inst or inst:FindFirstAncestorOfClass("Model")
    if not model then return end
    if not model:FindFirstChild("OverhubDiamondHL") then
        local hl=Instance.new("Highlight")
        hl.Name="OverhubDiamondHL"
        hl.FillColor=Color3.fromRGB(60,220,150)
        hl.OutlineColor=Color3.fromRGB(40,120,95)
        hl.FillTransparency=0.3
        hl.OutlineTransparency=0
        hl.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop
        hl.Adornee=model
        hl.Parent=model
        Debris:AddItem(hl,20)
    end
end
local function collectDiamond(d)
    if not d or not d.Parent then return end
    if activeDiamonds[d] then return end
    activeDiamonds[d]=true
    highlightDiamond(d)
    task.spawn(function()
        local tries=0
        while d.Parent and tries<300 do
            tries+=1
            pcall(function() TakeDiamonds:FireServer(d) end)
            local hrp=Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            if hrp and d:IsA("BasePart") then pcall(function() hrp.CFrame=d.CFrame+Vector3.new(0,3,0) end) end
            task.wait(0.03)
        end
        activeDiamonds[d]=nil
    end)
end
local function isDiamondName(nm)
    nm=tostring(nm or ""):lower()
    return nm:find("diamond") or nm=="d" or nm:find("dia")
end
local function scanForDiamonds()
    for _,d in ipairs(ItemsFolder:GetChildren()) do
        if isDiamondName(d.Name) then collectDiamond(d) end
    end
end
ItemsFolder.ChildAdded:Connect(function(c) if isDiamondName(c.Name) then collectDiamond(c) end end)
local function fireChestPrompts(root)
    local list={} local container=root or Workspace
    for _,obj in ipairs(container:GetDescendants()) do
        if (obj:IsA("Model") or obj:IsA("Part")) and tostring(obj.Name):lower():find("chest") then
            for _,child in ipairs(obj:GetDescendants()) do
                if child:IsA("ProximityPrompt") then table.insert(list,child) end
            end
        end
    end
    for _,prompt in ipairs(list) do
        task.spawn(function() for i=1,10 do pcall(function() fireproximityprompt(prompt) end) task.wait(0.045) end end)
    end
end
local function findStrongholdChestModel()
    local exact=Workspace:FindFirstChild("Stronghold Diamond Chest")
    if exact then return exact end
    for _,obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:lower():find("stronghold") and obj.Name:lower():find("chest") then return obj end
    end
    for _,obj in ipairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:lower():find("stronghold") then return obj end
    end
    return nil
end
local function colorStrongholdChest(model)
    if not model or not model:IsA("Model") then return end
    if not model:FindFirstChild("OverhubChestHL") then
        local hl=Instance.new("Highlight")
        hl.Name="OverhubChestHL"
        hl.FillColor=Color3.fromRGB(95,255,185)
        hl.OutlineColor=Color3.fromRGB(50,160,110)
        hl.FillTransparency=0.25
        hl.OutlineTransparency=0
        hl.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop
        hl.Adornee=model
        hl.Parent=model
        Debris:AddItem(hl,25)
    end
end
local function primaryPartOf(model) return model.PrimaryPart or model:FindFirstChild("PrimaryPart") or model:FindFirstChildWhichIsA("BasePart") end
local function teleportToChest()
    local model=findStrongholdChestModel()
    if not model then return false end
    colorStrongholdChest(model)
    local prim=primaryPartOf(model)
    if not prim then return false end
    local hrp=Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end
    if DiamondCountLabel then DiamondCountLabel.Text="Teleporting to chest..." end
    pcall(function() hrp.CFrame=prim.CFrame+Vector3.new(0,5,0) end)
    fireChestPrompts(model)
    return true
end
local function lockAboveStrongholdChest(maxTime)
    local model=findStrongholdChestModel() if not model then return end
    local prim=primaryPartOf(model) if not prim then return end
    task.spawn(function()
        local t0=tick()
        while model.Parent and prim.Parent and (tick()-t0)<(maxTime or 12) do
            local hrp=Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
            if not hrp then break end
            pcall(function() hrp.CFrame=prim.CFrame+Vector3.new(0,5,0) end)
            task.wait(0.12)
        end
    end)
end
local function waitStrongholdCollectionOrTimeout(timeout)
    local start=tick()
    local before=lastCount
    local opened=false
    while tick()-start<(timeout or 10) do
        local now=getDiamondCount()
        if now>before then
            opened=true
            postEvent("Stronghold Looted","Diamonds collected from stronghold.",{
                {name="Before",value=fmt(before),inline=true},
                {name="After",value=fmt(now),inline=true},
                {name="Gained",value=fmt(now-before),inline=true},
            })
            break
        end
        task.wait(0.25)
    end
    return opened
end
local seenServers={}
local function fetchServers(cursor)
    local url="https://games.roblox.com/v1/games/"..PlaceID.."/servers/Public?sortOrder=Asc&limit=100"
    if cursor then url=url.."&cursor="..HttpService:UrlEncode(cursor) end
    local ok,res=pcall(function() return HttpService:JSONDecode(game:HttpGet(url)) end)
    if not ok or not res or not res.data then return {data={}} end
    return res
end
local function pickBestServer()
    local best=nil
    local cursor=nil
    for _=1,3 do
        local res=fetchServers(cursor)
        for _,s in ipairs(res.data or {}) do
            local notFull=(s.playing or 0)<(s.maxPlayers or 0)
            local different=s.id~=game.JobId and not seenServers[s.id]
            if notFull and different then
                if not best then best=s end
                if s.ping and (not best.ping or s.ping<best.ping) then best=s end
                if not s.ping and best.playing and s.playing and s.playing<best.playing then best=s end
            end
        end
        cursor=res.nextPageCursor
        if not cursor then break end
        RunService.Heartbeat:Wait()
    end
    return best and best.id or nil
end
local function hopToRandomServer()
    local target=pickBestServer()
    if target then seenServers[target]=true TeleportService:TeleportToPlaceInstance(PlaceID,target,Player) return true end
    TeleportService:Teleport(PlaceID,Player) return true
end
local function prepareForTeleport()
    local teleportMarker=Instance.new("BoolValue")
    teleportMarker.Name="DiamondFarmTeleported"
    teleportMarker.Value=true
    teleportMarker.Parent=ReplicatedStorage
end
local function setupAutoReexecute()
    if not ReplicatedStorage:FindFirstChild("DiamondFarmMarker") then
        local marker=Instance.new("StringValue")
        marker.Name="DiamondFarmMarker"
        marker.Value="DiamondFarmScript"
        marker.Parent=ReplicatedStorage
    end
    if ReplicatedStorage:FindFirstChild("DiamondFarmTeleported") then
        ReplicatedStorage:FindFirstChild("DiamondFarmTeleported"):Destroy()
        task.delay(0.8,function() if PlaceID~=79546208627805 then optimizedLagClear() end end)
        queue={} sending=false
        task.wait(0.6)
        startFarmingLoop()
        return
    end
end
local function hopWithAuto(reason)
    prepareForTeleport()
    postEvent("Server Hop",reason or "Hopping to a new server.",{
        {name="Diamonds Gained (session)",value=fmt(TotalGained),inline=true},
        {name="Current Count",value=fmt(getDiamondCount()),inline=true},
    })
    local ok=pcall(hopToRandomServer)
    if not ok then pcall(function() TeleportService:Teleport(PlaceID,Player) end) end
    return true
end
local displayName=Player.DisplayName
local function isPlayerDead()
    local cf=Workspace:FindFirstChild("Characters")
    if cf then
        for _,ch in ipairs(cf:GetChildren()) do
            if ch.Name:lower():find(Player.Name:lower()) or (displayName and ch.Name:lower():find(displayName:lower())) then return true end
        end
    end
    if Player.Character then
        local hum=Player.Character:FindFirstChildOfClass("Humanoid")
        if hum and hum.Health<=0 then return true end
    end
    return false
end
local function cleanupCharactersFolder()
    local cf=Workspace:FindFirstChild("Characters")
    if cf then
        for _,ch in ipairs(cf:GetChildren()) do
            local keep=false
            if ch.Name:lower():find(Player.Name:lower()) then keep=true end
            if displayName and ch.Name:lower():find(displayName:lower()) then keep=true end
            if not keep then pcall(function() ch:Destroy() end) end
        end
    end
    for _,hl in ipairs(Workspace:GetDescendants()) do
        if hl:IsA("Highlight") and (hl.Name=="OverhubChestHL" or hl.Name=="OverhubDiamondHL") then
            if (tick()-(hl:GetAttribute("CreatedAt") or 0))>30 then pcall(function() hl:Destroy() end) end
        end
    end
end
cleanupCharactersFolder()
local HRP
local function updateHRP()
    if Player.Character then HRP=Player.Character:WaitForChild("HumanoidRootPart") end
end
updateHRP()
Player.CharacterAdded:Connect(function()
    updateHRP()
    task.delay(1,function()
        lastCount=getDiamondCount()
        if PlaceID~=79546208627805 then optimizedLagClear() end
        queue={} sending=false
    end)
end)
function startFarmingLoop()
    task.spawn(function()
        postEvent("Session Start","Autofarm started.",{{name="User",value=Player.Name,inline=true}})
        local hopCounter,chestCheck=0,0
        local serverStartTime=tick()
        local MaxServerTime=12
        lastCount=getDiamondCount()
        if DiamondCountLabel then DiamondCountLabel.Text="Diamonds: "..lastCount end
        while true do
            cleanupCharactersFolder()
            if tick()-serverStartTime>MaxServerTime then
                if DiamondCountLabel then DiamondCountLabel.Text="Auto-hopping (timeout)" end
                hopWithAuto("Timeout reached. Cycling server.")
                serverStartTime=tick()
                task.wait(1.5)
            end
            if isPlayerDead() then
                if DiamondCountLabel then DiamondCountLabel.Text="Dead, hopping..." end
                hopWithAuto("Player death detected.")
                serverStartTime=tick()
                task.wait(3)
                lastCount=getDiamondCount()
            end
            if Player.Character then
                pcall(function() scanForDiamonds() fireChestPrompts() end)
                chestCheck+=1
                if chestCheck>=1 then
                    chestCheck=0
                    if teleportToChest() then
                        if DiamondCountLabel then DiamondCountLabel.Text="Found chest!" end
                        lockAboveStrongholdChest(10)
                        postEvent("Stronghold Chest","Attempting to open stronghold chest.",{{name="Diamonds Before",value=fmt(lastCount),inline=true}})
                        local opened=waitStrongholdCollectionOrTimeout(8)
                        task.wait(0.6)
                        hopWithAuto(opened and "Stronghold looted. Rotating." or "Stronghold attempt. Rotating.")
                        serverStartTime=tick()
                        task.wait(2)
                        lastCount=getDiamondCount()
                    end
                end
                hopCounter+=1
                if hopCounter>=3 then
                    hopCounter=0
                    if DiamondCountLabel then DiamondCountLabel.Text="Hopping servers..." end
                    hopWithAuto("Periodic rotation for better spawns.")
                    serverStartTime=tick()
                    task.wait(2)
                    lastCount=getDiamondCount()
                else
                    task.wait(0.45)
                end
            else
                task.wait(0.45)
            end
        end
    end)
end
TeleportService.TeleportInitFailed:Connect(function() task.wait(0.6+math.random()*0.6) hopWithAuto("Teleport failed; retrying.") end)
setupAutoReexecute()
startFarmingLoop()
