-- Auto-execute across teleports (always TRUE)

queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/hellattexyss/testfarm/refs/heads/main/testmain'))()") -- [attached_file:1]

-- Auto party / teleport add spam (as-is)

if game.PlaceId == 79546208627805 then

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents", 9e9)

local TeleportEvent = RemoteEvents:WaitForChild("TeleportEvent", 9e9)

local function TeleportAdd(num)

local args = { [1] = "Add", [2] = num }

TeleportEvent:FireServer(unpack(args))

task.wait(0.5)

TeleportEvent:FireServer("Chosen", nil, 1)

end

task.spawn(function()

while true do

TeleportAdd(3) TeleportAdd(2) TeleportAdd(1)

task.wait(0.3)

end

end)

end -- [attached_file:1]

--// Services

local Players = game:GetService("Players")

local TweenService = game:GetService("TweenService")

local StarterGui = game:GetService("StarterGui")

local UserInputService = game:GetService("UserInputService")

local Workspace = game:GetService("Workspace")

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local TeleportService = game:GetService("TeleportService")

local HttpService = game:GetService("HttpService")

local Lighting = game:GetService("Lighting")

local RunService = game:GetService("RunService")

local Debris = game:GetService("Debris") -- [attached_file:1]

-- Player refs

local player = Players.LocalPlayer

local PlayerGui = player:WaitForChild("PlayerGui") -- [attached_file:1]

-- Real-time blur on load

local camera = workspace.CurrentCamera

local Blur = Instance.new("BlurEffect")

Blur.Enabled = true

Blur.Size = 0

Blur.Parent = camera -- [attached_file:1]

-- Remove dupes

for _, n in ipairs({"DiamondFarmGUI","AutoFarmDiamondsGUI"}) do

local f = PlayerGui:FindFirstChild(n)

if f then f:Destroy() end

end -- [attached_file:1]

-- ScreenGui

local ScreenGui = Instance.new("ScreenGui")

ScreenGui.Name = "AutoFarmDiamondsGUI"

ScreenGui.ResetOnSpawn = false

ScreenGui.IgnoreGuiInset = true

ScreenGui.Parent = PlayerGui -- [attached_file:1]

-- Root panel (smaller)

local Root = Instance.new("Frame")

Root.Name = "Root"

Root.Size = UDim2.new(0, 360, 0, 200)

Root.Position = UDim2.new(0.5, 0, 0.48, 0)

Root.AnchorPoint = Vector2.new(0.5, 0.5)

Root.BackgroundColor3 = Color3.fromRGB(18, 38, 22)

Root.BackgroundTransparency = 1

Root.BorderSizePixel = 0

Root.ClipsDescendants = true

Root.Active = true -- required for drag on mobile

Root.Selectable = true

Root.Parent = ScreenGui -- [attached_file:1]

local RootCorner = Instance.new("UICorner")

RootCorner.CornerRadius = UDim.new(0, 14)

RootCorner.Parent = Root -- [attached_file:1]

local RootStroke = Instance.new("UIStroke")

RootStroke.Thickness = 1

RootStroke.Color = Color3.fromRGB(60, 200, 140)

RootStroke.Transparency = 0.1

RootStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

RootStroke.Parent = Root -- [attached_file:1]

-- Glow halo

local Glow = Instance.new("ImageLabel")

Glow.Name = "Glow"

Glow.BackgroundTransparency = 1

Glow.AnchorPoint = Vector2.new(0.5, 0.5)

Glow.Position = UDim2.fromScale(0.5, 0.5)

Glow.Size = UDim2.new(1, 80, 1, 80)

Glow.Image = "rbxasset://textures/whiteSquare.png"

Glow.ImageColor3 = Color3.fromRGB(60, 210, 150)

Glow.ImageTransparency = 0.86

Glow.ScaleType = Enum.ScaleType.Slice

Glow.SliceCenter = Rect.new(10,10,246,246)

Glow.Parent = Root -- [attached_file:1]

-- Background gradient

local Bg = Instance.new("Frame")

Bg.Name = "Background"

Bg.Size = UDim2.fromScale(1, 1)

Bg.BackgroundColor3 = Root.BackgroundColor3

Bg.BackgroundTransparency = 1

Bg.BorderSizePixel = 0

Bg.Parent = Root -- [attached_file:1]

local BgCorner = Instance.new("UICorner")

BgCorner.CornerRadius = UDim.new(0, 14)

BgCorner.Parent = Bg -- [attached_file:1]

local BgGradient = Instance.new("UIGradient")

BgGradient.Color = ColorSequence.new({

ColorSequenceKeypoint.new(0.0, Color3.fromRGB(22, 56, 32)),

ColorSequenceKeypoint.new(1.0, Color3.fromRGB(18, 96, 58))

})

BgGradient.Rotation = 90

BgGradient.Parent = Bg -- [attached_file:1]

-- Header bar

local HeaderBar = Instance.new("Frame")

HeaderBar.Name = "HeaderBar"

HeaderBar.BackgroundTransparency = 1

HeaderBar.Size = UDim2.new(1, -16, 0, 34)

HeaderBar.Position = UDim2.new(0, 8, 0, 8)

HeaderBar.Parent = Root -- [attached_file:1]

local Left = Instance.new("Frame")

Left.BackgroundTransparency = 1

Left.Size = UDim2.new(0.5, -4, 1, 0)

Left.Parent = HeaderBar -- [attached_file:1]

local Right = Instance.new("Frame")

Right.BackgroundTransparency = 1

Right.Size = UDim2.new(0.5, -4, 1, 0)

Right.Position = UDim2.new(0.5, 8, 0, 0)

Right.Parent = HeaderBar -- [attached_file:1]

-- Title

local Title = Instance.new("TextLabel")

Title.Name = "Title"

Title.BackgroundTransparency = 1

Title.AnchorPoint = Vector2.new(0, 1)

Title.Position = UDim2.new(0, 0, 1, 0)

Title.Size = UDim2.new(1, 0, 1, 0)

Title.Text = "OverHub Autofarm"

Title.Font = Enum.Font.GothamBold

Title.TextColor3 = Color3.fromRGB(255, 255, 255)

Title.TextScaled = true

Title.TextXAlignment = Enum.TextXAlignment.Left

Title.TextTransparency = 1

Title.Parent = Left -- [attached_file:1]

-- Right buttons

local RightButtons = Instance.new("Frame")

RightButtons.BackgroundTransparency = 1

RightButtons.Size = UDim2.new(1, 0, 1, 0)

RightButtons.Parent = Right -- [attached_file:1]

-- Copy Discord button

local CopyBtn = Instance.new("TextButton")

CopyBtn.Name = "CopyDiscord"

CopyBtn.AnchorPoint = Vector2.new(1, 1)

CopyBtn.Position = UDim2.new(1, 0, 1, 0)

CopyBtn.Size = UDim2.new(0, 150, 1, 2)

CopyBtn.BackgroundTransparency = 1

CopyBtn.Text = "Copy Discord Link"

CopyBtn.Font = Enum.Font.GothamBold

CopyBtn.TextScaled = true

CopyBtn.TextColor3 = Color3.fromRGB(60, 200, 140)

CopyBtn.Parent = RightButtons -- [attached_file:1]

local CopyCorner = Instance.new("UICorner")

CopyCorner.CornerRadius = UDim.new(0, 10)

CopyCorner.Parent = CopyBtn

local CopyStroke = Instance.new("UIStroke")

CopyStroke.Thickness = 1

CopyStroke.Color = Color3.fromRGB(60, 200, 140)

CopyStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

CopyStroke.Parent = CopyBtn -- [attached_file:1]

-- Info button (bottom-right)

local InfoBtn = Instance.new("TextButton")

InfoBtn.Name = "InfoBtn"

InfoBtn.AnchorPoint = Vector2.new(1, 1)

InfoBtn.Position = UDim2.new(1, -10, 1, -10)

InfoBtn.Size = UDim2.new(0, 118, 0, 28)

InfoBtn.BackgroundTransparency = 1

InfoBtn.Text = "Info"

InfoBtn.Font = Enum.Font.GothamBold

InfoBtn.TextScaled = true

InfoBtn.TextColor3 = Color3.fromRGB(60, 200, 140)

InfoBtn.Parent = Root -- [attached_file:1]

local InfoCorner = Instance.new("UICorner")

InfoCorner.CornerRadius = UDim.new(0, 10)

InfoCorner.Parent = InfoBtn

local InfoStroke = Instance.new("UIStroke")

InfoStroke.Thickness = 1

InfoStroke.Color = Color3.fromRGB(60, 200, 140)

InfoStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

InfoStroke.Parent = InfoBtn -- [attached_file:1]

-- Center status

local Status = Instance.new("TextLabel")

Status.Name = "Status"
Status.BackgroundTransparency = 1
Status.Size = UDim2.new(1, -28, 0, 70)
Status.Position = UDim2.new(0, 14, 0.46, -35)
Status.Text = "AUTOFARM: ON"
Status.Font = Enum.Font.GothamBlack
Status.TextScaled = true
Status.TextColor3 = Color3.fromRGB(95, 255, 185)
Status.TextTransparency = 1
Status.Parent = Root -- [attached_file:1]

local StatusGlow = Instance.new("Frame")

StatusGlow.Name = "StatusGlow"

StatusGlow.BackgroundColor3 = Color3.fromRGB(95, 255, 185)

StatusGlow.BackgroundTransparency = 0.88

StatusGlow.Size = UDim2.new(0.92, 0, 0, 74)

StatusGlow.Position = UDim2.new(0.04, 0, 0.46, -37)

StatusGlow.BorderSizePixel = 0

StatusGlow.Parent = Root -- [attached_file:1]

local StatusGlowCorner = Instance.new("UICorner")

StatusGlowCorner.CornerRadius = UDim.new(0, 12)

StatusGlowCorner.Parent = StatusGlow

local StatusGlowGrad = Instance.new("UIGradient")

StatusGlowGrad.Color = ColorSequence.new({

ColorSequenceKeypoint.new(0.0, Color3.fromRGB(95, 255, 185)),

ColorSequenceKeypoint.new(1.0, Color3.fromRGB(60, 220, 150))

})

StatusGlowGrad.Transparency = NumberSequence.new{
    NumberSequenceKeypoint.new(0.0, 0.35),
    NumberSequenceKeypoint.new(0.5, 0.75),
    NumberSequenceKeypoint.new(1.0, 1.0)
}

StatusGlowGrad.Parent = StatusGlow -- [attached_file:1]

-- Bottom diamond counter

local DiamondCountLabel = Instance.new("TextLabel")

DiamondCountLabel.Name = "DiamondCountLabel"

DiamondCountLabel.BackgroundTransparency = 1

DiamondCountLabel.Size = UDim2.new(1, -20, 0, 20)

DiamondCountLabel.Position = UDim2.new(0, 10, 1, -24)

DiamondCountLabel.Text = "Diamonds: 0"

DiamondCountLabel.Font = Enum.Font.GothamBold

DiamondCountLabel.TextScaled = true

DiamondCountLabel.TextColor3 = Color3.fromRGB(255, 255, 255)

DiamondCountLabel.TextXAlignment = Enum.TextXAlignment.Left

DiamondCountLabel.TextTransparency = 1

DiamondCountLabel.Parent = Root -- [attached_file:1]

-- Info Tab (hidden)

local InfoTab = Instance.new("Frame")

InfoTab.Name = "InfoTab"

InfoTab.Visible = false

InfoTab.Size = UDim2.fromScale(1, 1)

InfoTab.BackgroundTransparency = 1

InfoTab.Parent = Root -- [attached_file:1]

local InfoBackdrop = Instance.new("Frame")

InfoBackdrop.Name = "InfoBackdrop"

InfoBackdrop.Size = UDim2.new(1, 0, 1, 0)

InfoBackdrop.BackgroundColor3 = Color3.fromRGB(18, 38, 22)

InfoBackdrop.BackgroundTransparency = 0.06

InfoBackdrop.Parent = InfoTab -- [attached_file:1]

local InfoBackdropCorner = Instance.new("UICorner")

InfoBackdropCorner.CornerRadius = UDim.new(0, 14)

InfoBackdropCorner.Parent = InfoBackdrop

local InfoBackdropStroke = Instance.new("UIStroke")

InfoBackdropStroke.Thickness = 1

InfoBackdropStroke.Color = Color3.fromRGB(60, 200, 140)

InfoBackdropStroke.Transparency = 0.1

InfoBackdropStroke.Parent = InfoBackdrop -- [attached_file:1]

-- Info header + close

local InfoHeader = Instance.new("TextLabel")

InfoHeader.Name = "InfoHeader"

InfoHeader.BackgroundTransparency = 1

InfoHeader.Size = UDim2.new(1, -16, 0, 30)

InfoHeader.Position = UDim2.new(0, 8, 0, 8)

InfoHeader.Text = "Changelogs"

InfoHeader.Font = Enum.Font.GothamBlack

InfoHeader.TextScaled = true

InfoHeader.TextColor3 = Color3.fromRGB(255, 255, 255)

InfoHeader.Parent = InfoBackdrop -- [attached_file:1]

local CloseInfo = Instance.new("TextButton")

CloseInfo.Name = "CloseInfo"

CloseInfo.AnchorPoint = Vector2.new(1, 0)

CloseInfo.Position = UDim2.new(1, -8, 0, 8)

CloseInfo.Size = UDim2.new(0, 28, 0, 28)

CloseInfo.BackgroundTransparency = 1

CloseInfo.Text = "✕"

CloseInfo.Font = Enum.Font.GothamBold

CloseInfo.TextScaled = true

CloseInfo.TextColor3 = Color3.fromRGB(255, 255, 255)

CloseInfo.Parent = InfoBackdrop -- [attached_file:1]

local CloseCorner = Instance.new("UICorner")

CloseCorner.CornerRadius = UDim.new(0, 8)

CloseCorner.Parent = CloseInfo

local CloseStroke = Instance.new("UIStroke")

CloseStroke.Thickness = 1

CloseStroke.Color = Color3.fromRGB(60, 200, 140)

CloseStroke.Parent = CloseInfo -- [attached_file:1]

-- Scrollable changelog body

local InfoBody = Instance.new("ScrollingFrame")

InfoBody.Name = "InfoBody"

InfoBody.Active = true

InfoBody.BorderSizePixel = 0

InfoBody.BackgroundTransparency = 1

InfoBody.Size = UDim2.new(1, -16, 1, -50)

InfoBody.Position = UDim2.new(0, 8, 0, 42)

InfoBody.CanvasSize = UDim2.new(0, 0, 0, 0)

InfoBody.ScrollBarThickness = 4

InfoBody.Parent = InfoBackdrop -- [attached_file:1]

local function addLogLine(parent, text)

local lbl = Instance.new("TextLabel")

lbl.BackgroundTransparency = 1

lbl.Size = UDim2.new(1, -4, 0, 18)

lbl.TextXAlignment = Enum.TextXAlignment.Left

lbl.Text = text

lbl.Font = Enum.Font.Gotham

lbl.TextScaled = true

lbl.TextColor3 = Color3.fromRGB(220, 255, 240)

lbl.Parent = parent

end -- [attached_file:1]

local function populateChangelogs()
    InfoBody:ClearAllChildren()
    local list = Instance.new("UIListLayout")
    list.Padding = UDim.new(0, 6)
    list.SortOrder = Enum.SortOrder.LayoutOrder
    list.Parent = InfoBody

    -- concise logs; include [NEW] Autofarm Logic
    addLogLine(InfoBody, "[NEW] Autofarm Logic, better stability")
    addLogLine(InfoBody, "[+] Auto Execute on hop")
    addLogLine(InfoBody, "[+] Auto Party start")
    addLogLine(InfoBody, "[*] Performance mode + lag fix")
    addLogLine(InfoBody, "[*] Diamond counter + quick notify")
    addLogLine(InfoBody, "[*] Lighter visuals on farm")
    addLogLine(InfoBody, "discord.gg/overhub for updates")

    task.wait()
    InfoBody.CanvasSize = UDim2.new(0, 0, 0, list.AbsoluteContentSize.Y + 8)
end -- [attached_file:1]

-- Tween helpers + intro

local function tween(o, ti, props) TweenService:Create(o, ti, props):Play() end

task.spawn(function()
tween(Blur, TweenInfo.new(0.30, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = 16})
task.wait(0.18)
tween(Blur, TweenInfo.new(0.20, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = 12})
tween(Root, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0.06})
tween(Bg, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundTransparency = 0})
tween(Title, TweenInfo.new(0.18, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
tween(Status, TweenInfo.new(0.24, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
tween(DiamondCountLabel, TweenInfo.new(0.16, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextTransparency = 0})
tween(Glow, TweenInfo.new(0.22, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {ImageTransparency = 0.86})
end) -- [attached_file:1]

-- Clipboard handling

local DISCORD_LINK = "https://discord.gg/overhub"

local HiddenCopyBox = Instance.new("TextBox")

HiddenCopyBox.Name = "HiddenCopyBox"

HiddenCopyBox.Size = UDim2.new(0, 1, 0, 1)

HiddenCopyBox.Position = UDim2.new(1, 9999, 1, 9999)

HiddenCopyBox.TextEditable = true

HiddenCopyBox.ClearTextOnFocus = false

HiddenCopyBox.Text = ""

HiddenCopyBox.Parent = ScreenGui -- [attached_file:1]

local function copyWithExecutor(t)
local env = getfenv and getfenv() or _G
local f = (env and env.setclipboard) or _G.setclipboard or _G.toclipboard
if f and typeof(f) == "function" then return pcall(f, t) end
return false
end

local function copyWithSetCore(t)

for i=1,14 do

local ok = pcall(function() StarterGui:SetCore("SetClipboard", t) end)

if ok then return true end

task.wait(0.12)

end

return false

end

local function copyWithTextBox(t)

HiddenCopyBox.Text = t

HiddenCopyBox:CaptureFocus()

HiddenCopyBox.CursorPosition = #HiddenCopyBox.Text + 1

HiddenCopyBox.SelectionStart = 1

return false

end

local function doCopy(t)

if copyWithExecutor(t) then return true end

if copyWithSetCore(t) then return true end

copyWithTextBox(t)

return false

end -- [attached_file:1]

CopyBtn.MouseEnter:Connect(function()

tween(CopyBtn, TweenInfo.new(0.12, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(110, 255, 195)})

end)

CopyBtn.MouseLeave:Connect(function()

tween(CopyBtn, TweenInfo.new(0.12, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(60, 200, 140)})

end)

CopyBtn.MouseButton1Click:Connect(function()

local ok = doCopy(DISCORD_LINK)

local orig = CopyStroke.Color

CopyStroke.Color = ok and Color3.fromRGB(120, 255, 200) or Color3.fromRGB(255, 180, 140)

TweenService:Create(CopyBtn, TweenInfo.new(0.08, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, true),
{Size = UDim2.new(0, 146, 1, 0)}):Play()

task.delay(0.18, function() CopyStroke.Color = orig end)

end) -- [attached_file:1]

-- Info toggling (guarded)

local function showInfo()

pcall(populateChangelogs)

for _, child in ipairs(Root:GetChildren()) do

if child ~= InfoTab and child:IsA("GuiObject") then child.Visible = false end

end

InfoTab.Visible = true

end

local function hideInfo()

InfoTab.Visible = false

for _, child in ipairs(Root:GetChildren()) do

if child ~= InfoTab and child:IsA("GuiObject") then child.Visible = true end

end

end

InfoBtn.MouseButton1Click:Connect(showInfo)

CloseInfo.MouseButton1Click:Connect(hideInfo) -- [attached_file:1]

-- DRAGGABLE GUI (restored; touch + mouse)
do
local dragging, dragStart, startPos
local function updateDrag(input)
local delta = input.Position - dragStart
Root.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
Root.InputBegan:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
dragging = true
dragStart = input.Position
startPos = Root.Position
input.Changed:Connect(function()
if input.UserInputState == Enum.UserInputState.End then dragging = false end
end)
end
end)
Root.InputChanged:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
if dragging then updateDrag(input) end
end
end)
UserInputService.InputChanged:Connect(function(input)
if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
updateDrag(input)
end
end)
end -- [attached_file:1]

-- Expose for snippet 2 (+ lag-clear hooks)

_G.OverhubUI = {
    Root = Root,
    DiamondCountLabel = DiamondCountLabel,
    StarterGui = StarterGui,
    Lighting = Lighting,
    RunService = RunService,
    Debris = Debris,
}
-- Services

local Players = game:GetService("Players")

local Workspace = game:GetService("Workspace")

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local TeleportService = game:GetService("TeleportService")

local HttpService = game:GetService("HttpService")

local Lighting = game:GetService("Lighting") -- [attached_file:1]

local Player = Players.LocalPlayer

local PlaceID = game.PlaceId

local ui = _G.OverhubUI or {}

local DiamondCountLabel = ui.DiamondCountLabel

local StarterGui = ui.StarterGui

local RunService = ui.RunService

local Debris = ui.Debris -- [attached_file:1]

-- Remotes/containers

local RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")

local TakeDiamonds = RemoteEvents:WaitForChild("RequestTakeDiamonds")

local ItemsFolder = Workspace:WaitForChild("Items") -- [attached_file:1]

-- ========= FIXED ANTI-LAG (ONLY SECTION CHANGED) =========

do
    -- Lightweight device score
    local function getDeviceTier()
        local tier = 2
        pcall(function()
            if UserSettings and UserSettings():IsTenFootInterface() then tier = 1 end
        end)
        if game:GetService("GuiService"):IsTenFootInterface() then tier = 1 end
        local fpsHint = 1
        if typeof(RunService.RenderStepped) == "RBXScriptSignal" then
            -- quick sampling for ~0.2s without blocking
            local frames = 0
            local start = tick()
            local cn; cn = RunService.RenderStepped:Connect(function()
                frames += 1
                if tick() - start > 0.2 then cn:Disconnect() end
            end)
            task.wait(0.22)
            if frames <= 10 then fpsHint = 0 end -- very low fps
        end
        if fpsHint == 0 then tier = 0 end
        return tier -- 0=low,1=mid,2=high
    end

    local Tier = getDeviceTier()

    -- Safer global knobs
    pcall(function()
        settings().Rendering.QualityLevel = (Tier == 2) and Enum.QualityLevel.Level02 or Enum.QualityLevel.Level01
    end)
    pcall(function() settings().Physics.AllowSleep = true end)
    pcall(function() Debris.MaxItems = 60 end)

    -- Gradual culling queues to prevent spikes
    local killClasses = {"ParticleEmitter","Trail","Fire","Smoke","Sparkles","PointLight","SpotLight","SurfaceLight","Highlight","Beam"}
    local function shouldCullName(n)
        n = string.lower(n or "")
        return n:find("decal") or n:find("particle") or n:find("vfx") or n:find("smoke") or n:find("sparks")
    end

    -- One-time lightweight visuals pass
    task.spawn(function()
        pcall(function()
            Lighting.GlobalShadows = false
            Lighting.FogEnd = 9e9
            Lighting.Brightness = 1
            for _, eff in ipairs(Lighting:GetChildren()) do
                if eff:IsA("BloomEffect") or eff:IsA("DepthOfFieldEffect") or eff:IsA("SunRaysEffect") or eff:IsA("ColorCorrectionEffect") then
                    eff.Enabled = false
                end
            end
        end)
        pcall(function()
            local cam = workspace.CurrentCamera
            for _, eff in ipairs(cam:GetChildren()) do
                if eff:IsA("BlurEffect") or eff:IsA("SunRaysEffect") or eff:IsA("ColorCorrectionEffect") then
                    eff.Enabled = false
                end
            end
        end)
    end)

    -- Incremental world culling
    local function incrementalCull(descList, budgetPerFrame)
        local i = 1
        while i <= #descList do
            local limit = math.min(i + budgetPerFrame - 1, #descList)
            for j = i, limit do
                local d = descList[j]
                if d and d.Parent then
                    for _, c in ipairs(killClasses) do
                        if d:IsA(c) then pcall(function() d.Enabled = false end) end
                    end
                    if d:IsA("Decal") or d:IsA("Texture") then pcall(function() d.Transparency = 1 end) end
                    if d:IsA("Sound") then pcall(function() d.Playing = false d.Volume = 0 end) end
                    if d:IsA("BasePart") then
                        pcall(function()
                            d.CastShadow = false
                            if Tier <= 1 then d.Reflectance = 0 d.Material = Enum.Material.Plastic end
                        end)
                    end
                    if shouldCullName(d.Name) then
                        pcall(function()
                            if d:IsA("ParticleEmitter") or d:IsA("Beam") then d.Enabled = false end
                        end)
                    end
                end
            end
            i = limit + 1
            RunService.Heartbeat:Wait()
        end
    end

    -- First sweep in chunks
    task.spawn(function()
        local desc = {}
        for _, d in ipairs(Workspace:GetDescendants()) do
            desc[#desc+1] = d
        end
        local budget = (Tier == 2) ? 500 : (Tier == 1) and 250 or 120
        -- Lua doesn't have ?:, rewrite:
        if Tier == 2 then
            budget = 500
        elseif Tier == 1 then
            budget = 250
        else
            budget = 120
        end
        incrementalCull(desc, budget)
    end)

    -- Periodic light maintenance (prevents buildup without spikes)
    task.spawn(function()
        while true do
            local batch, count = {}, 0
            for _, d in ipairs(Workspace:GetChildren()) do
                if d and d.Parent then
                    batch[#batch+1] = d
                    count += 1
                    if count >= 400 then break end
                end
            end
            incrementalCull(batch, (Tier == 0 and 100) or (Tier == 1 and 180) or 280)
            task.wait(3.5)
        end
    end)

    -- Export ClearLag entry used by rest of script, routed to incremental strategy
    function ClearLag()
        task.spawn(function()
            local desc = {}
            for _, d in ipairs(Workspace:GetDescendants()) do
                desc[#desc+1] = d
                if #desc >= 2400 then break end -- cap to avoid huge sweeps
            end
            incrementalCull(desc, (Tier == 0 and 120) or (Tier == 1 and 220) or 360)
        end)
    end
end -- [attached_file:1]

-- Run lag clear at start if not lobby

task.spawn(function() if PlaceID ~= 79546208627805 then ClearLag() end end) -- [attached_file:1]

-- ========= DIAMOND COUNTER + NOTIFY =========

local username = Player.Name

local function getDiamondCount()

local ok, result = pcall(function()

local obj = Players[username].PlayerGui.Interface.DiamondCount.Count

return tonumber(obj.Text) or 0

end)

return ok and result or 0

end

local lastCount = getDiamondCount()

local function tryNotifyCollected(newCount, oldCount)

if newCount and oldCount and newCount > oldCount then

pcall(function()

StarterGui:SetCore("SendNotification", {

Title = "Collected 1 Diamond",

Text = "Balance: " .. tostring(newCount),

Duration = 2

})

end)

end

end

local function updateDiamondCountDisplay()

local n = getDiamondCount()

if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. n end

return n

end

local function setupDiamondCountListener()

local ok, obj = pcall(function()

return Players[username].PlayerGui.Interface.DiamondCount.Count

end)

if ok and obj and obj:IsA("TextLabel") then

obj:GetPropertyChangedSignal("Text"):Connect(function()

local before = lastCount

local now = tonumber(obj.Text) or before

lastCount = now

if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. now end

tryNotifyCollected(now, before)

end)

lastCount = tonumber(obj.Text) or lastCount

if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. lastCount end

else

task.spawn(function()

while true do

local before = lastCount

local now = getDiamondCount()

if now ~= before then

lastCount = now

if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. now end

tryNotifyCollected(now, before)

end

task.wait(1)

end

end)

end

end

task.spawn(setupDiamondCountListener) -- [attached_file:1]

-- ========= FARM CORE (restored and guarded) =========

local HRP

local function updateHRP()

if Player.Character then

HRP = Player.Character:WaitForChild("HumanoidRootPart")

end

end

updateHRP()

Player.CharacterAdded:Connect(function()

updateHRP()

task.delay(1, function()

lastCount = getDiamondCount()

if PlaceID ~= 79546208627805 then ClearLag() end

end)

end) -- [attached_file:1]

local activeDiamonds = {}

local function collectDiamond(d)

if not d or not d.Parent then return end

if activeDiamonds[d] then return end

activeDiamonds[d] = true

task.spawn(function()

while d.Parent and HRP do

pcall(function() TakeDiamonds:FireServer(d) end)

pcall(function() HRP.CFrame = d.CFrame + Vector3.new(0,3,0) end)

task.wait(0.02)

end

activeDiamonds[d] = nil

end)

end -- [attached_file:1]

local function scanForDiamonds()

for _, d in ipairs(ItemsFolder:GetChildren()) do

if typeof(d.Name) == "string" and d.Name:lower():find("diamond") then

collectDiamond(d)

end

end

end

ItemsFolder.ChildAdded:Connect(function(c)

if typeof(c.Name) == "string" and c.Name:lower():find("diamond") then

collectDiamond(c)

end

end) -- [attached_file:1]

-- Chest proximity spam

local function fireChestPrompts()

local chests = {}

for _, obj in ipairs(Workspace:GetDescendants()) do

if (obj:IsA("Model") or obj:IsA("Part")) and tostring(obj.Name):lower():find("chest") then

for _, child in ipairs(obj:GetDescendants()) do

if child:IsA("ProximityPrompt") then table.insert(chests, child) end

end

end

end

for _, prompt in ipairs(chests) do

task.spawn(function()

for i = 1, 8 do pcall(function() fireproximityprompt(prompt) end) task.wait(0.05) end

end)

end

end -- [attached_file:1]

-- Stronghold chest helpers

local function findStrongholdChestPart()

local chest = Workspace:FindFirstChild("Stronghold Diamond Chest")

if chest then

local primary = chest:FindFirstChild("PrimaryPart") or chest:FindFirstChildWhichIsA("BasePart")

if primary then return primary end

end

for _, obj in ipairs(Workspace:GetDescendants()) do

if obj:IsA("Model") and obj.Name:lower():find("stronghold") and obj.Name:lower():find("chest") then

local primary = obj:FindFirstChild("PrimaryPart") or obj:FindFirstChildWhichIsA("BasePart")

if primary then return primary end

end

end

for _, obj in ipairs(Workspace:GetDescendants()) do

if (obj:IsA("Model") or obj:IsA("Part")) and obj.Name:lower():find("stronghold") then

local primary = obj:FindFirstChild("PrimaryPart") or obj:FindFirstChildWhichIsA("BasePart")

if primary then return primary end

end

end

return nil

end -- [attached_file:1]

local function teleportToChest()

if not HRP then return false end

local chestPart = findStrongholdChestPart()

if chestPart then

if DiamondCountLabel then DiamondCountLabel.Text = "Teleporting to chest..." end

pcall(function() HRP.CFrame = chestPart.CFrame + Vector3.new(0, 5, 0) end)

for _, child in ipairs(chestPart.Parent:GetDescendants()) do

if child:IsA("ProximityPrompt") then

for i = 1, 8 do pcall(function() fireproximityprompt(child) end) task.wait(0.05) end

end

end

return true

end

return false

end -- [attached_file:1]

local function lockAboveStrongholdChest()

local chestPart = findStrongholdChestPart()

if chestPart and HRP then

task.spawn(function()

while chestPart.Parent and HRP do

pcall(function() HRP.CFrame = chestPart.CFrame + Vector3.new(0, 5, 0) end)

task.wait(0.1)

end

end)

end

end -- [attached_file:1]

-- Server hop + re-exec + lag clear hook

local function hopToRandomServer()

local servers = {}

local ok, result = pcall(function()

return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"))

end)

if ok and result and result.data then

for _, s in ipairs(result.data) do

if s.playing < s.maxPlayers and s.id ~= game.JobId then table.insert(servers, s.id) end

end

if #servers > 0 then

TeleportService:TeleportToPlaceInstance(PlaceID, servers[math.random(1, #servers)], Player)

return true

end

end

TeleportService:Teleport(PlaceID, Player)

return true

end -- [attached_file:1]

local function prepareForTeleport()

local teleportMarker = Instance.new("BoolValue")

teleportMarker.Name = "DiamondFarmTeleported"

teleportMarker.Value = true

teleportMarker.Parent = ReplicatedStorage

end -- [attached_file:1]

local function setupAutoReexecute()

if not ReplicatedStorage:FindFirstChild("DiamondFarmMarker") then

local marker = Instance.new("StringValue")

marker.Name = "DiamondFarmMarker"

marker.Value = "DiamondFarmScript"

marker.Parent = ReplicatedStorage

end

if ReplicatedStorage:FindFirstChild("DiamondFarmTeleported") then

ReplicatedStorage:FindFirstChild("DiamondFarmTeleported"):Destroy()

task.delay(1.0, function() if PlaceID ~= 79546208627805 then ClearLag() end end)

task.wait(0.8)

startFarmingLoop()

return

end

end -- [attached_file:1]

local function hopWithAuto()

prepareForTeleport()

local ok = pcall(hopToRandomServer)

if not ok then pcall(function() TeleportService:Teleport(PlaceID, Player) end) end

return true

end -- [attached_file:1]

-- Death detection + Characters cleanup

local displayName = Player.DisplayName

local function isPlayerDead()

local cf = Workspace:FindFirstChild("Characters")

if cf then

for _, ch in ipairs(cf:GetChildren()) do

if ch.Name:lower():find(Player.Name:lower()) or (displayName and ch.Name:lower():find(displayName:lower())) then

return true

end

end

end

if Player.Character then

local hum = Player.Character:FindFirstChildOfClass("Humanoid")

if hum and hum.Health <= 0 then return true end

end

return false

end

local function cleanupCharactersFolder()

local cf = Workspace:FindFirstChild("Characters")

if cf then

for _, ch in ipairs(cf:GetChildren()) do

local keep = false

if ch.Name:lower():find(Player.Name:lower()) then keep = true end

if displayName and ch.Name:lower():find(displayName:lower()) then keep = true end

if not keep then pcall(function() ch:Destroy() end) end

end

end

end

cleanupCharactersFolder() -- [attached_file:1]

-- Main loop (guarded so UI errors never stop farm)

function startFarmingLoop()

task.spawn(function()

local hopCounter, chestCheck = 0, 0

local serverStartTime = tick()

local MaxServerTime = 15

lastCount = getDiamondCount()

if DiamondCountLabel then DiamondCountLabel.Text = "Diamonds: " .. lastCount end

while true do

cleanupCharactersFolder()

if tick() - serverStartTime > MaxServerTime then

if DiamondCountLabel then DiamondCountLabel.Text = "Auto-hopping (timeout)" end

hopWithAuto()

serverStartTime = tick()

task.wait(2)

end

if isPlayerDead() then

if DiamondCountLabel then DiamondCountLabel.Text = "Dead, hopping..." end

hopWithAuto()

serverStartTime = tick()

task.wait(5)

lastCount = getDiamondCount()

end

if Player.Character and HRP then

pcall(fireChestPrompts)

pcall(scanForDiamonds)

chestCheck += 1

if chestCheck >= 1 then

chestCheck = 0

if teleportToChest() then

if DiamondCountLabel then DiamondCountLabel.Text = "Found chest!" end

lockAboveStrongholdChest()

task.wait(1)

end

end

hopCounter += 1

if hopCounter >= 3 then

hopCounter = 0

if DiamondCountLabel then DiamondCountLabel.Text = "Hopping servers..." end

hopWithAuto()

serverStartTime = tick()

task.wait(3)

lastCount = getDiamondCount()

else

task.wait(0.5)

end

else

task.wait(0.5)

end

end

end)

end -- [attached_file:1]

TeleportService.TeleportInitFailed:Connect(function() task.wait(0.5) hopWithAuto() end)

setupAutoReexecute()

startFarmingLoop()
